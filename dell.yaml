openapi: "3.0.3"
info:
  title: Simple API overview
  version: 1.0.0
  description: A simple API to operate hourse

servers:
  - url: http://localhost:8080/api/v1

paths:
  /project:
    post:
      description: create a new project
      tags:
        - Project
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectRequest"
      responses:
        '204':
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /model/{id}:
    put:
      description: exec calibration
      tags:
        - Model
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
                $ref: "#/components/schemas/ModelRequest"
      responses:
        '204':
          $ref: '#/components/responses/NoContent'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /article:
    post:
      description: create a new article
      tags:
        - Article
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/schemas/ArticleRequest"
      responses:
        '200':
          $ref: '#/components/responses/Article'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'


security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 

  schemas:
    ProjectRequest:
      type: object
      properties:
        name:
          type: string
          description: project name
        orders:
          type: array
          items:
            type: string
            enum:
              - winfit
              - dragAndDrop
              - typing
          example: [winfit, dragAndDrop, typing]
          description: testing sequence
        typingArticle:
          type: string
        numberOfParticipant:
          type: integer
          example: 12
        winfitAngles:
          type: array
          items:
            type: integer
          example: [0, 45, 90, 135, 180, 235, 270, 315]
        models:
          type: array
          items:
            type: string
          example: [A, B, C, D]
      required:
        - name
        - orders
        - numberOfParticipant
        - models
    TypingBody:
      type: object
    ModelRequest:
      type: object
      properties:
        factor:
          type: string
      required:
        - factor
    ModelResponse:
      type: object
      properties:
        status:
          type: string
          enum:
            - success
            - pending
      required:
        - status
    ArticleRequest:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
      required:
        - title
        - content
    ArticleResponse:
      type: object
      properties:
        id:
          type: string
      required:
        - id
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string
      required:
        - code
        - message

  responses:
    NotFound:
      description: NotFound
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: BadRequest
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NoContent:
      description: NoContent
    Article:
      description: create success
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
            required:
              - id

  headers:
    x-user-id:
      schema:
        type: string
      required: true
      example: "abcdef"
